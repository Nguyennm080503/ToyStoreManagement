@page
@model ToyStoreManagement.Pages.MyOrder.IndexModel
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Index";
    var count = 1;

}
@if (HttpContextAccessor.HttpContext.Session.GetString("AccountId") != null)

<h1>Index</h1>

    @if (Model.Order.Count == 0)
    {
        <div class="alert alert-warning">No orders found.</div>
    }
    else
    {
        <table class="table text-lg-center">
            <thead>
                <tr>
                    <th>
                        Items
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Order[0].OrderId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Order[0].CustomerId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Order[0].Address)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Order[0].OrderDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Order[0].TotalAmount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Order[0].Status)
                    </th>               
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Order)
                {
                    <tr>
                        <td>
                            @count
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OrderDetailId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OrderId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Quantity)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UnitPrice)
                        </td>
                        <td>
                            @switch (item.Status)
                            {
                                case 1:
                                    <label class="text-info">To Receive</label>
                                    break;
                                case 2:
                                    <label class="text-success">Completed</label>
                                    break;
                                case 3:
                                    <label class="text-danger">Cancel</label>
                                    break;
                                default:
                                    <label class="text-muted">To Ship</label>
                                    break;
                            }
                        </td>
                        <td>
                            <a asp-page="./Edit" asp-route-id="@item.OrderId" class="btn btn-sm btn-primary mr-1">Edit</a>
                            <a asp-page="./Details" asp-route-id="@item.OrderId" class="btn btn-sm btn-info mr-1">Details</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }