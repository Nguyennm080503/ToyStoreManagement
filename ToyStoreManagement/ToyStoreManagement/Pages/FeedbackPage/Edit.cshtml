@page
@model ToyStoreManagement.Pages.FeedbackPage.EditModel

@{
    ViewData["Title"] = "Edit";
}

<div class="">
    <p class="display-4" style="font-size: 1.3rem; font-weight: 500;"> Update Feedback</p>
    <div class="ps-5 ms-5">
        <form method="post" enctype="multipart/form-data">
            <input type="hidden" asp-for="FeedbackId" />
            <div class="d-flex mt-2" style="font-size: 0.8rem;">
                <div>
                    <p class="px-2 ps-0 my-0" style="font-size: 0.8rem; font-weight: bolder;"> Product </p>
                    <p class="px-2 ps-0 my-0 mt-2 pt-1" style="font-size: 0.8rem; font-weight: bolder;"> Feedback </p>
                </div>
                <div class="mx-3">
                    <div>
                        <select name="ProductId" style="border-radius: 3px; border: 1px solid #dfe0e2;" class="px-2 mt-2">
                            @foreach (var type in Model.Products)
                            {
                                <option value="@type.ProductId" selected="@Model.Feedback.ProductId == type.ProdcutId"> @type.Name </option>
                            }
                        </select>
                    </div>
                    <div>
                        <input type="text" name="FeedbackText" style="border-radius: 3px; border: 1px solid #dfe0e2;" class="px-2 mt-2" value="@Model.Feedback.FeedbackText" />
                    </div>

                    <p id="error-message" class="text-danger mt-2"> @Model.Message </p>
                    <div class="mt-2 pt-1">
                        <button type="submit">
                            Update Feedback
                        </button>
                        <a asp-page="./Feedback"> Cancel </a>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
